import 'package:elearning/screens/account/account_page.dart';import 'package:elearning/screens/category/category_screen.dart';import 'package:elearning/screens/courses/course_screen.dart';import 'package:elearning/screens/home/home_page.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_svg/svg.dart';import 'package:modal_bottom_sheet/modal_bottom_sheet.dart';import 'package:provider/provider.dart';import '../../constants/app_image.dart';import '../../constants/colors.dart';import '../../constants/font.dart';import '../../view_model/common_view_model.dart';import '../cart/cart_screen.dart';class NavigationScreen extends StatefulWidget {  final data;  NavigationScreen(      {Key? key, required this.data, this.redirect, this.args})      : super(key: key);  String? redirect;  String? args;  static const String routeName = "/home";  @override  State<NavigationScreen> createState() => _NavigationScreenState();}class _NavigationScreenState extends State<NavigationScreen> {  String title = 'Home';  _onPageChanged(int index) {    // onTap    common.setNavigationIndex(index);    setState(() {      switch (index) {        case 0:          {            title = 'Home';          }          break;        case 1:          {            title = 'Notifications';          }          break;        case 2:          {            title = 'Messages';          }          break;        case 3:          {            title = 'Profile';          }          break;      }    });  }  late CommonViewModel common;  @override  void initState() {    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {      common = Provider.of<CommonViewModel>(context, listen: false);    });    super.initState();  }  @override  void didChangeDependencies() {    super.didChangeDependencies();    WidgetsBinding.instance.addPostFrameCallback((_) {      common.setInitial(widget.data);    });  }  @override  Widget build(BuildContext context) {    return Consumer<CommonViewModel>(        builder: (context, common, child) {      return WillPopScope(        onWillPop: () {          if (common.navigationIndex == 0) {            showMaterialModalBottomSheet(                context: context,                shape: RoundedRectangleBorder(                    borderRadius: BorderRadius.vertical(                        top: Radius.circular(10))),                backgroundColor: kWhite,                builder: (context) {                  return Container(                    constraints: BoxConstraints(maxHeight: 600),                    child: SingleChildScrollView(                      child: Container(                          padding: EdgeInsets.symmetric(                              vertical: 10, horizontal: 10),                          child: Column(                            crossAxisAlignment:                                CrossAxisAlignment.start,                            children: [                              const Text(                                "Do you want to quit the application?",                                style: TextStyle(                                    fontSize: p1,                                    fontWeight: FontWeight.w800,                                    color: gray_900),                              ),                              SizedBox(                                height: 10,                              ),                              Row(                                children: [                                  Expanded(                                    child: ElevatedButton(                                      style: ButtonStyle(                                        backgroundColor:                                            MaterialStateProperty.all<                                                Color>(Colors.white),                                        shape:                                            MaterialStateProperty.all(                                          RoundedRectangleBorder(                                              borderRadius:                                                  BorderRadius                                                      .circular(5)),                                        ),                                      ),                                      onPressed: () {                                        Navigator.of(context).pop();                                      },                                      child: const Text(                                        "Cancel",                                        style:                                            TextStyle(color: kBlack),                                      ),                                    ),                                  ),                                  SizedBox(                                    width: 10,                                  ),                                  Expanded(                                    child: ElevatedButton(                                      style: ButtonStyle(                                        backgroundColor:                                            MaterialStateProperty.all<                                                Color>(kPrimaryColor),                                        shape:                                            MaterialStateProperty.all(                                          RoundedRectangleBorder(                                              borderRadius:                                                  BorderRadius                                                      .circular(5)),                                        ),                                      ),                                      onPressed: () {                                        SystemNavigator.pop();                                      },                                      child: Text("Quit"),                                    ),                                  ),                                ],                              )                            ],                          )),                    ),                  );                });          } else {            common.itemTapped(0);          }          return Future.value(false);        },        child: Scaffold(          body: PageView(            controller: common.pagecontroller,            children: <Widget>[              HomeScreen(),              CategoryScreen(),              CourseScreen(),              AccountScreen()            ],            onPageChanged: _onPageChanged,            physics: const NeverScrollableScrollPhysics(),          ),          bottomNavigationBar: Theme(            data: ThemeData(                // splashColor: Colors.transparent,                // highlightColor: Colors.transparent,                ),            child: BottomAppBar(              shape: CircularNotchedRectangle(),              notchMargin: 10,              clipBehavior: Clip.antiAlias,              child: BottomNavigationBar(                backgroundColor: kWhite,                onTap: common.itemTapped,                elevation: 0,                selectedItemColor: kBlack,                unselectedItemColor: kBlack,                currentIndex: common.navigationIndex,                selectedLabelStyle: TextStyle(color: kBlack),                unselectedLabelStyle: TextStyle(color: kBlack),                type: BottomNavigationBarType.fixed,                items: [                  BottomNavigationBarItem(                      icon: SvgPicture.asset(                        home_outlined,                        color: common.navigationIndex == 0                            ? primary_2                            : gray_900,                      ),                      label: 'Home'),                  BottomNavigationBarItem(                      icon: SvgPicture.asset(                        categories,                        color: common.navigationIndex == 1                            ? primary_2                            : gray_900,                      ),                      label: "Category"),                  BottomNavigationBarItem(                      icon: SvgPicture.asset(                        rewards,                        width: 28,                        color: common.navigationIndex == 2                            ? primary_2                            : gray_900,                      ),                      label: "Courses"),                  BottomNavigationBarItem(                      icon: SvgPicture.asset(                        profile,                        color: common.navigationIndex == 4                            ? primary_2                            : gray_900,                      ),                      label: "Profile"),                ],              ),            ),          ),        ),      );    });  }}